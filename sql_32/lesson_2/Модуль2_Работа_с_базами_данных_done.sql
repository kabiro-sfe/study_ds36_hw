--=============== МОДУЛЬ 2. РАБОТА С БАЗАМИ ДАННЫХ =======================================
--= ПОМНИТЕ, ЧТО НЕОБХОДИМО УСТАНОВИТЬ ВЕРНОЕ СОЕДИНЕНИЕ И ВЫБРАТЬ СХЕМУ PUBLIC===========

SET postgres TO "dvd-rental";





--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Выведите уникальные названия регионов из таблицы адресов
SELECT DISTINCT(district) FROM address;




--ЗАДАНИЕ №2
--Доработайте запрос из предыдущего задания, чтобы запрос выводил только те регионы, 
--названия которых начинаются на "K" и заканчиваются на "a", и названия не содержат пробелов
SELECT DISTINCT(district) FROM address
WHERE district NOT LIKE '% %' AND district LIKE 'K%' AND district LIKE '%a'






--ЗАДАНИЕ №3
--Получите из таблицы платежей за прокат фильмов информацию по платежам, которые выполнялись 
--в промежуток с 17 марта 2007 года по 19 марта 2007 года включительно, 
--и стоимость которых превышает 1.00.
--Платежи нужно отсортировать по дате платежа.

SELECT p.payment_id, p.payment_date, p.amount 
FROM payment p
WHERE (payment_date::date BETWEEN '2007-03-17' AND '2007-03-19') 
AND amount > 1.00
order by payment_date desc ;



--ЗАДАНИЕ №4
-- Выведите информацию о 10-ти последних платежах за прокат фильмов.
SELECT p.payment_id, p.payment_date, p.amount 
FROM payment p 
ORDER BY p.payment_id DESC 
LIMIT 10;






--ЗАДАНИЕ №5
--Выведите следующую информацию по покупателям:
--  1. Фамилия и имя (в одной колонке через пробел)
--  2. Электронная почта
--  3. Длину значения поля email
--  4. Дату последнего обновления записи о покупателе (без времени)
--Каждой колонке задайте наименование на русском языке.

SELECT c.first_name || ' ' || c.last_name AS "Фамилия Имя Клиента"
		, email AS "Электронная почта"
		, character_length(email) AS "Длина строки email"
		, date(last_update) AS "Дата последнего обновления"
FROM customer c 





--ЗАДАНИЕ №6
--Выведите одним запросом активных покупателей, имена которых Kelly или Willie.
--Все буквы в фамилии и имени из нижнего регистра должны быть переведены в высокий регистр.
SELECT  UPPER(c.first_name), UPPER(c.last_name)
FROM customer c 
WHERE c.first_name  IN ('Kelly', 'Willie') AND active = 1;





--======== ДОПОЛНИТЕЛЬНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Выведите одним запросом информацию о фильмах, у которых рейтинг "R" 
--и стоимость аренды указана от 0.00 до 3.00 включительно, 
--а также фильмы c рейтингом "PG-13" и стоимостью аренды больше или равной 4.00.
SELECT film_id, title, description, rating, rental_rate 
FROM film f 
where (rating  = 'R' AND rental_rate <= 3.00) 
	OR (rating  = 'PG-13' AND rental_rate <= 4.00);






--ЗАДАНИЕ №2
--Получите информацию о трёх фильмах с самым длинным описанием фильма.

SELECT film_id, title, description 
FROM film f 
ORDER BY  character_length(description) DESC
LIMIT 3;



--ЗАДАНИЕ №3
-- Выведите Email каждого покупателя, разделив значение Email на 2 отдельных колонки:
--в первой колонке должно быть значение, указанное до @, 
--во второй колонке должно быть значение, указанное после @.

SELECT email , split_part(email,'@', 1), split_part(email,'@', 2)
FROM customer c;





--ЗАДАНИЕ №4
--Доработайте запрос из предыдущего задания, скорректируйте значения в новых колонках: 
--первая буква должна быть заглавной, остальные строчными.

SELECT email, initcap(split_part(email,'@', 1)), initcap(split_part(email,'@', 2))
FROM customer c ;


